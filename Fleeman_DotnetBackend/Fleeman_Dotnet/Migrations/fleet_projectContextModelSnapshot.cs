// <auto-generated />
using System;
using Fleeman_Dotnet.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MySql.EntityFrameworkCore.Extensions;

#nullable disable

namespace Fleeman_Dotnet.Migrations
{
    [DbContext(typeof(fleet_projectContext))]
    partial class fleet_projectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySQLModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Fleeman_Dotnet.Models.add_on_master", b =>
                {
                    b.Property<int>("add_on_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "addOnId");

                    b.Property<double?>("add_on_daily_rate")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "addonDailyRate");

                    b.Property<string>("add_on_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "addOnName");

                    b.Property<DateTime?>("rate_valid_until")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)")
                        .HasAnnotation("Relational:JsonPropertyName", "rateValidUntil");

                    b.HasKey("add_on_id")
                        .HasName("PRIMARY");

                    b.ToTable("add_on_master");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.airport_master", b =>
                {
                    b.Property<int>("airport_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "airportId");

                    b.Property<string>("airport_code")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "airportCode");

                    b.Property<string>("airport_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "airportName");

                    b.Property<int?>("city_id")
                        .HasColumnType("int");

                    b.Property<int?>("hub_id")
                        .HasColumnType("int");

                    b.Property<int?>("state_id")
                        .HasColumnType("int");

                    b.HasKey("airport_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "hub_id" }, "FK9q13ys5sara44e3t8iwsbehe7");

                    b.HasIndex(new[] { "state_id" }, "FKgykh73g2t7b9tyhou2eve5ljf");

                    b.HasIndex(new[] { "city_id" }, "FKnacm5228qoxi0egygij94kqje");

                    b.ToTable("airport_master");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.booking_detail_table", b =>
                {
                    b.Property<long>("booking_detail_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "bookingDetailId");

                    b.Property<int?>("addon_id")
                        .HasColumnType("int");

                    b.Property<double?>("addon_rate")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "addonRate");

                    b.Property<long?>("booking_id")
                        .HasColumnType("bigint");

                    b.HasKey("booking_detail_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "booking_id" }, "FK8lhwsgs4ew5tdogoed7fpif4a");

                    b.HasIndex(new[] { "addon_id" }, "FKl1eiva9sie32vxofv6l7qj0g8");

                    b.ToTable("booking_detail_table");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.booking_header_table", b =>
                {
                    b.Property<long>("booking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "bookingId");

                    b.Property<string>("address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("book_car")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "Bookcar");

                    b.Property<DateOnly?>("booking_date")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "bookingDate");

                    b.Property<int?>("car_id")
                        .HasColumnType("int");

                    b.Property<long?>("cartype_id")
                        .HasColumnType("bigint");

                    b.Property<int>("cust_id")
                        .HasColumnType("int");

                    b.Property<double?>("daily_rate")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "dailyRate");

                    b.Property<string>("email_id")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "emailId");

                    b.Property<DateOnly?>("end_date")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "endDate");

                    b.Property<string>("first_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "firstName");

                    b.Property<string>("last_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "lastName");

                    b.Property<double?>("monthly_rate")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "monthlyRate");

                    b.Property<string>("pin")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("start_date")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "startDate");

                    b.Property<string>("state")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("weekly_rate")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "weeklyRate");

                    b.HasKey("booking_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "cust_id" }, "FKdph943hu15r48ahrnkql3lrbl");

                    b.HasIndex(new[] { "car_id" }, "FKmmkg1viclerruhttx06973w3j");

                    b.HasIndex(new[] { "cartype_id" }, "FKopo340pd5jigmo84cahh57cwo");

                    b.ToTable("booking_header_table");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.car_master", b =>
                {
                    b.Property<int>("car_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "carId");

                    b.Property<string>("car_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "carName");

                    b.Property<long?>("cartype_id")
                        .HasColumnType("bigint");

                    b.Property<int?>("hub_id")
                        .HasColumnType("int");

                    b.Property<string>("is_available")
                        .HasColumnType("enum('N','Y')")
                        .HasAnnotation("Relational:JsonPropertyName", "isAvailable");

                    b.Property<DateOnly?>("maintenance_due_date")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "maintenanceDueDate");

                    b.Property<double?>("mileage")
                        .HasColumnType("double");

                    b.Property<string>("number_plate")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "numberPlate");

                    b.Property<string>("status")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "Status");

                    b.HasKey("car_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "cartype_id" }, "FKe7t3ybbd5mnrqomrch1wuyc6m");

                    b.HasIndex(new[] { "hub_id" }, "FKrbd83493vx6lu3vprvkx8qgqh");

                    b.HasIndex(new[] { "number_plate" }, "UKonp0df5km5sg4h2s4w34uc0yn")
                        .IsUnique();

                    b.ToTable("car_master");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.car_type_master", b =>
                {
                    b.Property<long>("cartype_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "carTypeId");

                    b.Property<string>("cartype_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "carTypeName");

                    b.Property<double?>("daily_rate")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "dailyRate");

                    b.Property<string>("image_path")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "imagePath");

                    b.Property<double?>("monthly_rate")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "monthlyRate");

                    b.Property<double?>("weekly_rate")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "weeklyRate");

                    b.HasKey("cartype_id")
                        .HasName("PRIMARY");

                    b.ToTable("car_type_master");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.city_master", b =>
                {
                    b.Property<int>("city_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "cityId");

                    b.Property<string>("city_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "cityName");

                    b.Property<int?>("state_id")
                        .HasColumnType("int");

                    b.HasKey("city_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "state_id" }, "FKfxtjuwt9iqx9n7xl6f8wl6uu4");

                    b.ToTable("city_master");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.customer_master", b =>
                {
                    b.Property<int>("cust_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "custId");

                    b.Property<string>("address_line1")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "addressLine1");

                    b.Property<string>("address_line2")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "addressLine2");

                    b.Property<string>("city")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("credit_card_number")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "creditCardNumber");

                    b.Property<string>("credit_card_type")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "creditCardType");

                    b.Property<DateOnly?>("date_of_birth")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "dateOfBirth");

                    b.Property<string>("driving_license_number")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "drivingLicenseNumber");

                    b.Property<string>("email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("first_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "firstName");

                    b.Property<string>("idp_number")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "idpNumber");

                    b.Property<string>("issued_bydl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "issuedByDl");

                    b.Property<string>("last_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "lastName");

                    b.Property<string>("mobile_number")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "mobileNumber");

                    b.Property<DateOnly?>("passport_issue_date")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "passportIssueDate");

                    b.Property<string>("passport_issued_by")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "passportIssuedBy");

                    b.Property<string>("passport_number")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "passportNumber");

                    b.Property<DateOnly?>("passport_valid_from")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "passportValidFrom");

                    b.Property<DateOnly?>("passport_valid_through")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "passportValidThrough");

                    b.Property<string>("phone_number")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "phoneNumber");

                    b.Property<string>("pincode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("valid_throughdl")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "validThroughDl");

                    b.HasKey("cust_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "email" }, "UKsnf65l86t4b0xj6v0f9nymegs")
                        .IsUnique();

                    b.ToTable("customer_master");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.hub_master", b =>
                {
                    b.Property<int>("hub_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "hubId");

                    b.Property<int?>("city_id")
                        .HasColumnType("int");

                    b.Property<long?>("contact_number")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "contactNumber");

                    b.Property<string>("hub_address_and_details")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "hubAddressAndDetails");

                    b.Property<string>("hub_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("state_id")
                        .HasColumnType("int");

                    b.HasKey("hub_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "city_id" }, "FK7rdbu34jsqwuoyuound4e830p");

                    b.HasIndex(new[] { "state_id" }, "FKf94kvk79lamurkcyvj8hhop1q");

                    b.HasIndex(new[] { "contact_number" }, "UKq4cka6kuf15mrgsvs05wj1e87")
                        .IsUnique();

                    b.ToTable("hub_master");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.invoice_detail_table", b =>
                {
                    b.Property<long>("invdtl_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "invdtlId");

                    b.Property<double?>("addon_amt")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "addOnAmt");

                    b.Property<int?>("addon_id")
                        .HasColumnType("int");

                    b.Property<long?>("invoice_id")
                        .HasColumnType("bigint");

                    b.HasKey("invdtl_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "addon_id" }, "FKdxr8d4h98iq24g5944vho0txs");

                    b.HasIndex(new[] { "invoice_id" }, "FKjij1hnrk7hmdm8oq5yguqo8o9");

                    b.ToTable("invoice_detail_table");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.invoice_header_table", b =>
                {
                    b.Property<long>("invoice_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "invoiceId");

                    b.Property<long?>("booking_id")
                        .HasColumnType("bigint");

                    b.Property<int?>("car_id")
                        .HasColumnType("int");

                    b.Property<int?>("cust_id")
                        .HasColumnType("int");

                    b.Property<string>("customer_details")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "customerDetails");

                    b.Property<DateOnly?>("date")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("handover_date")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "handoverDate");

                    b.Property<string>("rate")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("rental_amt")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "rentalAmt");

                    b.Property<DateOnly?>("return_date")
                        .HasColumnType("date")
                        .HasAnnotation("Relational:JsonPropertyName", "returnDate");

                    b.Property<double?>("total_addon_amt")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "totalAddOnAmt");

                    b.Property<double?>("total_amt")
                        .HasColumnType("double")
                        .HasAnnotation("Relational:JsonPropertyName", "totalAmt");

                    b.HasKey("invoice_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "booking_id" }, "FK5dvc2a779phnc8cjjxx94swb5");

                    b.HasIndex(new[] { "cust_id" }, "FKskcvkb6nr6713a2rjgy027a97");

                    b.HasIndex(new[] { "car_id" }, "FKt256nitu82j1d1ryxv2h7mx4r");

                    b.ToTable("invoice_header_table");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.state_master", b =>
                {
                    b.Property<int>("state_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "stateId");

                    b.Property<string>("state_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "stateName");

                    b.HasKey("state_id")
                        .HasName("PRIMARY");

                    b.ToTable("state_master");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Id");

                    b.Property<string>("email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("password")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("username")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "password" }, "UKkiqfjabx9puw3p1eg7kily8kg")
                        .IsUnique();

                    b.HasIndex(new[] { "email" }, "UKob8kqyqqgmefl0aco34akdtpe")
                        .IsUnique();

                    b.HasIndex(new[] { "username" }, "UKsb8bbouer5wak8vyiiy4pf2bx")
                        .IsUnique();

                    b.ToTable("user");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.airport_master", b =>
                {
                    b.HasOne("Fleeman_Dotnet.Models.city_master", "city")
                        .WithMany("airport_masters")
                        .HasForeignKey("city_id")
                        .HasConstraintName("FKnacm5228qoxi0egygij94kqje");

                    b.HasOne("Fleeman_Dotnet.Models.hub_master", "hub")
                        .WithMany("airport_masters")
                        .HasForeignKey("hub_id")
                        .HasConstraintName("FK9q13ys5sara44e3t8iwsbehe7");

                    b.HasOne("Fleeman_Dotnet.Models.state_master", "state")
                        .WithMany("airport_masters")
                        .HasForeignKey("state_id")
                        .HasConstraintName("FKgykh73g2t7b9tyhou2eve5ljf");

                    b.Navigation("city");

                    b.Navigation("hub");

                    b.Navigation("state");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.booking_detail_table", b =>
                {
                    b.HasOne("Fleeman_Dotnet.Models.add_on_master", "addon")
                        .WithMany("booking_detail_tables")
                        .HasForeignKey("addon_id")
                        .HasConstraintName("FKl1eiva9sie32vxofv6l7qj0g8");

                    b.HasOne("Fleeman_Dotnet.Models.booking_header_table", "booking")
                        .WithMany("booking_detail_tables")
                        .HasForeignKey("booking_id")
                        .HasConstraintName("FK8lhwsgs4ew5tdogoed7fpif4a");

                    b.Navigation("addon");

                    b.Navigation("booking");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.booking_header_table", b =>
                {
                    b.HasOne("Fleeman_Dotnet.Models.car_master", "car")
                        .WithMany("booking_header_tables")
                        .HasForeignKey("car_id")
                        .HasConstraintName("FKmmkg1viclerruhttx06973w3j");

                    b.HasOne("Fleeman_Dotnet.Models.car_type_master", "cartype")
                        .WithMany("booking_header_tables")
                        .HasForeignKey("cartype_id")
                        .HasConstraintName("FKopo340pd5jigmo84cahh57cwo");

                    b.HasOne("Fleeman_Dotnet.Models.customer_master", "cust")
                        .WithMany("booking_header_tables")
                        .HasForeignKey("cust_id")
                        .IsRequired()
                        .HasConstraintName("FKdph943hu15r48ahrnkql3lrbl");

                    b.Navigation("car");

                    b.Navigation("cartype");

                    b.Navigation("cust");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.car_master", b =>
                {
                    b.HasOne("Fleeman_Dotnet.Models.car_type_master", "cartype")
                        .WithMany("car_masters")
                        .HasForeignKey("cartype_id")
                        .HasConstraintName("FKe7t3ybbd5mnrqomrch1wuyc6m");

                    b.HasOne("Fleeman_Dotnet.Models.hub_master", "hub")
                        .WithMany("car_masters")
                        .HasForeignKey("hub_id")
                        .HasConstraintName("FKrbd83493vx6lu3vprvkx8qgqh");

                    b.Navigation("cartype");

                    b.Navigation("hub");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.city_master", b =>
                {
                    b.HasOne("Fleeman_Dotnet.Models.state_master", "state")
                        .WithMany("city_masters")
                        .HasForeignKey("state_id")
                        .HasConstraintName("FKfxtjuwt9iqx9n7xl6f8wl6uu4");

                    b.Navigation("state");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.hub_master", b =>
                {
                    b.HasOne("Fleeman_Dotnet.Models.city_master", "city")
                        .WithMany("hub_masters")
                        .HasForeignKey("city_id")
                        .HasConstraintName("FK7rdbu34jsqwuoyuound4e830p");

                    b.HasOne("Fleeman_Dotnet.Models.state_master", "state")
                        .WithMany("hub_masters")
                        .HasForeignKey("state_id")
                        .HasConstraintName("FKf94kvk79lamurkcyvj8hhop1q");

                    b.Navigation("city");

                    b.Navigation("state");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.invoice_detail_table", b =>
                {
                    b.HasOne("Fleeman_Dotnet.Models.add_on_master", "addon")
                        .WithMany("invoice_detail_tables")
                        .HasForeignKey("addon_id")
                        .HasConstraintName("FKdxr8d4h98iq24g5944vho0txs");

                    b.HasOne("Fleeman_Dotnet.Models.invoice_header_table", "invoice")
                        .WithMany("invoice_detail_tables")
                        .HasForeignKey("invoice_id")
                        .HasConstraintName("FKjij1hnrk7hmdm8oq5yguqo8o9");

                    b.Navigation("addon");

                    b.Navigation("invoice");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.invoice_header_table", b =>
                {
                    b.HasOne("Fleeman_Dotnet.Models.booking_header_table", "booking")
                        .WithMany("invoice_header_tables")
                        .HasForeignKey("booking_id")
                        .HasConstraintName("FK5dvc2a779phnc8cjjxx94swb5");

                    b.HasOne("Fleeman_Dotnet.Models.car_master", "car")
                        .WithMany("invoice_header_tables")
                        .HasForeignKey("car_id")
                        .HasConstraintName("FKt256nitu82j1d1ryxv2h7mx4r");

                    b.HasOne("Fleeman_Dotnet.Models.customer_master", "cust")
                        .WithMany("invoice_header_tables")
                        .HasForeignKey("cust_id")
                        .HasConstraintName("FKskcvkb6nr6713a2rjgy027a97");

                    b.Navigation("booking");

                    b.Navigation("car");

                    b.Navigation("cust");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.add_on_master", b =>
                {
                    b.Navigation("booking_detail_tables");

                    b.Navigation("invoice_detail_tables");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.booking_header_table", b =>
                {
                    b.Navigation("booking_detail_tables");

                    b.Navigation("invoice_header_tables");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.car_master", b =>
                {
                    b.Navigation("booking_header_tables");

                    b.Navigation("invoice_header_tables");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.car_type_master", b =>
                {
                    b.Navigation("booking_header_tables");

                    b.Navigation("car_masters");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.city_master", b =>
                {
                    b.Navigation("airport_masters");

                    b.Navigation("hub_masters");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.customer_master", b =>
                {
                    b.Navigation("booking_header_tables");

                    b.Navigation("invoice_header_tables");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.hub_master", b =>
                {
                    b.Navigation("airport_masters");

                    b.Navigation("car_masters");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.invoice_header_table", b =>
                {
                    b.Navigation("invoice_detail_tables");
                });

            modelBuilder.Entity("Fleeman_Dotnet.Models.state_master", b =>
                {
                    b.Navigation("airport_masters");

                    b.Navigation("city_masters");

                    b.Navigation("hub_masters");
                });
#pragma warning restore 612, 618
        }
    }
}
